#This docker-compose.yml file tells Docker to do the following:

# Pull the image we uploaded in from the registry.
# Run 5 instances of that image as a service called web, limiting each one to use, at most, 10% of a single core of CPU time (this could also be e.g. “1.5” to mean 1 and half core for each), and 50MB of RAM.
# Immediately restart containers if one fails.
# Map port 4000 on the host to web’s port 8080.
# Instruct web’s containers to share port 8080 via a load-balanced network called webnet. (Internally, the containers themselves publish to web’s port 8080 at an ephemeral port.)
# Define the webnet network with the default settings (which is a load-balanced overlay network).

#version: "3"
#services:
#  web:
#    # replace username/repo:tag with your name and image details
#    image: 96ankur/testing:part1
#    deploy:
#      replicas: 5
#      resources:
#        limits:
#          cpus: "0.1"
#          memory: 50M
#      restart_policy:
#        condition: on-failure
#    ports:
#      - "4000:8080"
#    networks:
#      - webnet
#networks:
#  webnet:
#

# ===========================================================================================
#                               VISUALIZER

#version: "3"
#services:
#  web:
#    # replace username/repo:tag with your name and image details
#    image: 96ankur/testing:part1
#    deploy:
#      replicas: 5
#      restart_policy:
#        condition: on-failure
#      resources:
#        limits:
#          cpus: "0.1"
#          memory: 50M
#    ports:
#      - "4000:8080"
#    networks:
#      - webnet
#  visualizer:
#    image: dockersamples/visualizer:stable
#    ports:
#      - "8080:8080"
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#    deploy:
#      placement:
#        constraints: [node.role == manager]
#    networks:
#      - webnet
#networks:
#  webnet:

# ===========================================================================================
#                               REDIS

version: "3"
services:
  web:
    # replace username/repo:tag with your name and image details
    image: 96ankur/testing:part1
    deploy:
      replicas: 5
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
    ports:
      - "4000:8080"
    networks:
      - webnet
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - "/home/docker/data:/data"
    deploy:
      placement:
        constraints: [node.role == manager]
    command: redis-server --appendonly yes
    networks:
      - webnet
networks:
  webnet:

